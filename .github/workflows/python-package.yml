# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Checkout submodules
      run: git submodule update --init --recursive
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Build QUIP/libAtoms
      env: 
        QUIP_ARCH: linux_x86_64_gfortran
        HAVE_GAP: 0
      run: |
        pwd
        sudo apt-get update -y
        sudo apt-get install -y  gfortran libblas-dev liblapack-dev \
          openmpi-bin libopenmpi-dev netcdf-bin libnetcdf-dev libhdf5-serial-dev \
          python-numpy
        mkdir -p QUIP/build/${QUIP_ARCH}
        cp QUIP/.github/workflows/Makefile.inc QUIP/build/${QUIP_ARCH}/Makefile.inc
        (cd QUIP && make libAtoms)
    # # Uncomment to get SSH access for testing
    # - name: Setup tmate session
    #   if: failure()
    #   uses: mxschmitt/action-tmate@v3
    #   timeout-minutes: 15
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        python -m pip install -e . --verbose
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude .git,QUIP
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude=.git,QUIP
    - name: Build Fortran executable
      run:
        QUIP_ROOT=${PWD}/QUIP make -C libextxyz fextxyz
    - name: Test with pytest
      run: |
        USE_FORTRAN=T pytest -v
