# this build script is adapted from scipy

build_and_store_wheels: &BUILD_AND_STORE_WHEELS
  install_cibuildwheel_script:
    - python -m pip install cibuildwheel==2.12.1
  cibuildwheel_script:
    - cibuildwheel
    - tools/wheels/release-wheels.sh
  env:
    GITHUB_TOKEN: ENCRYPTED[c1ecfd239b2b9b6901fc4a6bce77edf656a80f9070269ac3d677faf884d9062242926476efbaa1f441a959858baba264]
    TWINE_USERNAME: __token__
    TWINE_PASSWORD: ENCRYPTED[126e078623ba57fb3091d35785e2be7bd303199c9c4e6d25bc425047408a848c6068b8e66b008e2adb6aa19881d335e0]
    CIBW_TEST_REQUIRES: pytest
    CIBW_TEST_COMMAND: "pytest -v {package}/tests"
  wheels_artifacts:
    path: "wheelhouse/*"

######################################################################
# Build macosx_arm64 natively
######################################################################

cirrus_wheels_macos_arm64_task:
  macos_instance:
    image: ghcr.io/cirruslabs/macos-monterey-xcode:13.3.1
  matrix:
    - env:
        CIBW_BUILD: cp38-*
        CIBW_BEFORE_ALL: bash tools/wheels/cibw_before_all_cp38_macosx_arm64.sh
    - env:
        CIBW_BUILD: cp39-* cp310-* cp311-*
  env:
    PATH: /opt/homebrew/opt/python@3.10/bin:$PATH
    CIBW_ENVIRONMENT: MACOSX_DEPLOYMENT_TARGET=12.0 _PYTHON_HOST_PLATFORM="macosx-12.0-arm64"
    PKG_CONFIG_PATH: /opt/arm64-builds/lib/pkgconfig
    # assumes that the cmake config is in /usr/local/lib/cmake
    CMAKE_PREFIX_PATH: /opt/arm64-builds/
    REPAIR_PATH: /usr/local/gfortran/lib:/opt/arm64-builds/lib
    CIBW_REPAIR_WHEEL_COMMAND_MACOS: >
      DYLD_LIBRARY_PATH=/usr/local/gfortran/lib:/opt/arm64-builds/lib delocate-listdeps {wheel} &&
      DYLD_LIBRARY_PATH=/usr/local/gfortran/lib:/opt/arm64-builds/lib delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}

  install_pre_requirements_script:
    - brew install python@3.10
    - ln -s python3 /opt/homebrew/opt/python@3.10/bin/python
    - brew install pcre2

  build_script:
    - which python
    # needed for submodules
    - git submodule update --init
    - uname -m
    - python -c "import platform;print(platform.python_version());print(platform.system());print(platform.machine())"
    - clang --version
  <<: *BUILD_AND_STORE_WHEELS


